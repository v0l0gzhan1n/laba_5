# 6 задание
version: "3.8"

services:
  fastapi1:
    image: ghcr.io/v0l0gzhan1n/fastapi-app:1
    container_name: fastapi1
    restart: always
    ports:
      - "8001:8000"
    environment:
      - INSTANCE_NUMBER=1
    networks:
      - app_net

  fastapi2:
    image: ghcr.io/v0l0gzhan1n/fastapi-app:1
    container_name: fastapi2
    restart: always
    ports:
      - "8002:8000"
    environment:
      - INSTANCE_NUMBER=2
    networks:
      - app_net

  fastapi3:
    image: ghcr.io/v0l0gzhan1n/fastapi-app:1
    container_name: fastapi3
    restart: always
    ports:
      - "8003:8000"
    environment:
      - INSTANCE_NUMBER=3
    networks:
      - app_net

  nginx:
    image: nginx:alpine
    container_name: nginx_balancer
    ports:
      - "8081:80"
    volumes:
      - ./nginx-config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-config/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - fastapi1
      - fastapi2
      - fastapi3
    networks:
      - app_net

networks:
  app_net:
    driver: bridge
# 5 задание
# version: "3.8"

# services:
#   fastapi:
#     image: ghcr.io/v0l0gzhan1n/fastapi-app:1
#     container_name: fastapi_app
#     restart: always
#     ports:
#       - "8000:8000"
#     env_file:
#       - .env
#     networks:
#       - app_network


#   nginx:
#     image: nginx:latest
#     container_name: my_nginx
#     ports:
#       - "80:80" 
#     volumes:
#       - ./nginx-conf/nginx.conf:/etc/nginx/nginx.conf:ro
#     depends_on:
#       - fastapi 
#     restart: always
#     networks:
#       - app_network


# networks:
#   app_network:
#     driver: bridge
